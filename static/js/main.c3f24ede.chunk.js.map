{"version":3,"sources":["components/Loader/Loader.jsx","components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","api/posts.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["Loader","className","PostsList","posts","selectedPost","selectPost","map","userId","title","id","type","onClick","postId","BASE_URL","getComments","a","fetch","comments","json","then","result","data","filter","comment","removeComment","commentId","method","addComment","name","email","body","JSON","stringify","NewCommentForm","useState","setName","setEmail","setBody","onSubmit","event","preventDefault","placeholder","value","onChange","target","getPosts","post","getPostDetails","PostDetails","setPost","isCommentsVisible","setCommentsVisibility","setComments","useEffect","length","App","setPosts","setUserId","setPostId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3f24ede.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\nimport { Loader } from '../Loader/Loader';\n\nexport const PostsList = ({ posts, selectedPost, selectPost }) => {\n  const onClick = (postId) => {\n    if (selectedPost === postId) {\n      selectPost(0);\n    } else {\n      selectPost(postId);\n    }\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      {!posts && (\n        <Loader />\n      )}\n\n      <ul className=\"PostsList__list\">\n        {posts.map(({ userId, title, id }) => (\n          <li className=\"PostsList__item\">\n            <div>\n              <b>{`[User #${userId}] `}</b>\n              {title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => onClick(id)}\n            >\n              {selectedPost === id ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      userId: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  selectedPost: PropTypes.number.isRequired,\n  selectPost: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com/comments';\n\nexport const getComments = async(postId) => {\n  const comments = await fetch(`${BASE_URL}`);\n\n  return comments.json()\n    .then(result => result.data.filter(comment => comment.postId === postId));\n};\n\nexport const removeComment = async(commentId) => {\n  const comment = await fetch(\n    `${BASE_URL}/${commentId}`,\n    { method: 'DELETE' },\n  );\n\n  return comment.json()\n    .then(result => result.data);\n};\n\nexport const addComment = async(postId, name, email, body) => fetch(BASE_URL, {\n  method: 'POST',\n  body: JSON.stringify({\n    postId, name, email, body,\n  }),\n});\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport PropTypes from 'prop-types';\nimport { addComment } from '../../api/comments';\n\nexport const NewCommentForm = ({ selectedPost }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        addComment(selectedPost, name, email, body);\n        setName('');\n        setEmail('');\n        setBody('');\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={event => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  selectedPost: PropTypes.number.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com/posts';\n\nexport const getPosts = async(userId) => {\n  const posts = await fetch(`${BASE_URL}`);\n\n  if (userId) {\n    return posts.json()\n      .then(result => result.data.filter(post => post.userId === userId));\n  }\n\n  return posts.json()\n    .then(result => result.data);\n};\n\nexport const getPostDetails = async(userId) => {\n  const post = await fetch(`${BASE_URL}/${userId}`);\n\n  return post.json()\n    .then(result => result.data);\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostDetails } from '../../api/posts';\nimport { getComments, removeComment } from '../../api/comments';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ selectedPost }) => {\n  const [post, setPost] = useState(null);\n  const [isCommentsVisible, setCommentsVisibility] = useState(false);\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    getPostDetails(selectedPost)\n      .then(setPost);\n  }, [selectedPost]);\n\n  useEffect(() => {\n    getComments(selectedPost)\n      .then(setComments);\n  }, [comments]);\n\n  return (\n    <div className=\"PostDetails\">\n      {post && (\n        <>\n          <section className=\"PostDetails__post\">\n            <h2>{post.title}</h2>\n            <p>{post.body}</p>\n          </section>\n\n          <section className=\"PostDetails__comments\">\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => setCommentsVisibility(!isCommentsVisible)}\n            >\n              {isCommentsVisible\n                ? `Hide ${comments.length} comments`\n                : `Show ${comments.length} comments`}\n            </button>\n\n            {isCommentsVisible && (\n              <ul className=\"PostDetails__list\">\n                {comments.map(({ id, email, body }) => (\n                  <li className=\"PostDetails__list-item\">\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => removeComment(id)}\n                    >\n                      X\n                    </button>\n                    <span>{`${email}:`}</span>\n                    <p>{body}</p>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </section>\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm\n                selectedPost={selectedPost}\n              />\n            </div>\n          </section>\n        </>\n      )}\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPost: PropTypes.number.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getPosts } from './api/posts';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [userId, setUserId] = useState(0);\n  const [postId, setPostId] = useState(0);\n\n  useEffect(() => {\n    getPosts(+userId)\n      .then(setPosts);\n  }, [userId]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={event => setUserId(event.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPost={postId}\n            selectPost={setPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails\n            selectedPost={postId}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}