{"version":3,"sources":["components/Loader/Loader.jsx","components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","api/posts.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["Loader","className","PostsList","posts","selectedPost","selectPost","map","userId","title","id","key","type","onClick","postId","BASE_URL","getComments","a","fetch","comments","json","then","result","data","filter","comment","removeComment","commentId","method","addComment","body","JSON","stringify","NewCommentForm","setComments","useState","name","email","formData","setFormData","onSubmit","event","preventDefault","placeholder","value","onChange","target","prevData","trimLeft","getPosts","post","getPostDetails","PostDetails","setPost","isCommentsVisible","setIsCommentsVisible","useEffect","length","deleteComment","App","setPosts","setUserId","setPostId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8aeea180.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\nimport { Loader } from '../Loader/Loader';\n\nexport const PostsList = ({ posts, selectedPost, selectPost }) => {\n  const handleClick = (postId) => {\n    if (selectedPost === postId) {\n      selectPost(0);\n    } else {\n      selectPost(postId);\n    }\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      {!posts && (\n        <Loader />\n      )}\n\n      <ul className=\"PostsList__list\">\n        {posts.map(({ userId, title, id }) => (\n          <li\n            className=\"PostsList__item\"\n            key={id}\n          >\n            <div>\n              <b>{`[User #${userId}] `}</b>\n              {title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => handleClick(id)}\n            >\n              {selectedPost === id ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      userId: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  selectedPost: PropTypes.number.isRequired,\n  selectPost: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com/comments';\n\nexport const getComments = async(postId) => {\n  const comments = await fetch(`${BASE_URL}`);\n\n  return comments.json()\n    .then(result => result.data.filter(comment => comment.postId === postId));\n};\n\nexport const removeComment = async(commentId) => {\n  const comment = await fetch(\n    `${BASE_URL}/${commentId}`,\n    { method: 'DELETE' },\n  );\n\n  return comment.json()\n    .then(result => result.data);\n};\n\nexport const addComment = async comment => fetch(BASE_URL, {\n  method: 'POST',\n  body: JSON.stringify(comment),\n});\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport PropTypes from 'prop-types';\nimport { addComment, getComments } from '../../api/comments';\n\nexport const NewCommentForm = ({ selectedPost, setComments }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    body: '',\n  });\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    formData.postId = selectedPost;\n\n    if (!formData.name || !formData.email || !formData.body) {\n      return;\n    }\n\n    addComment(formData)\n      .then(() => getComments(selectedPost)\n        .then(setComments));\n\n    setFormData({\n      name: '',\n      email: '',\n      body: '',\n    });\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          value={formData.name}\n          className=\"NewCommentForm__input\"\n          onChange={({ target }) => setFormData(prevData => ({\n            ...prevData,\n            name: target.value.trimLeft(),\n          }))}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          value={formData.email}\n          className=\"NewCommentForm__input\"\n          onChange={({ target }) => setFormData(prevData => ({\n            ...prevData,\n            email: target.value.trimLeft(),\n          }))}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          value={formData.body}\n          className=\"NewCommentForm__input\"\n          onChange={({ target }) => setFormData(prevData => ({\n            ...prevData,\n            body: target.value.trimLeft(),\n          }))}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  selectedPost: PropTypes.number.isRequired,\n  setComments: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com/posts';\n\nexport const getPosts = async(userId) => {\n  const posts = await fetch(`${BASE_URL}`);\n\n  if (userId) {\n    return posts.json()\n      .then(result => result.data.filter(post => post.userId === userId));\n  }\n\n  return posts.json()\n    .then(result => result.data);\n};\n\nexport const getPostDetails = async(userId) => {\n  const post = await fetch(`${BASE_URL}/${userId}`);\n\n  return post.json()\n    .then(result => result.data);\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostDetails } from '../../api/posts';\nimport { getComments, removeComment } from '../../api/comments';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ selectedPost }) => {\n  const [post, setPost] = useState(null);\n  const [isCommentsVisible, setIsCommentsVisible] = useState(false);\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    getPostDetails(selectedPost)\n      .then(setPost);\n\n    getComments(selectedPost)\n      .then(setComments);\n  }, [selectedPost]);\n\n  const deleteComment = (id) => {\n    removeComment(id)\n      .then(() => getComments(selectedPost)\n        .then(setComments));\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      {post && (\n        <>\n          <section className=\"PostDetails__post\">\n            <h2>{post.title}</h2>\n            <p>{post.body}</p>\n          </section>\n\n          <section className=\"PostDetails__comments\">\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => setIsCommentsVisible(!isCommentsVisible)}\n            >\n              {isCommentsVisible\n                ? `Hide ${comments.length} comments`\n                : `Show ${comments.length} comments`}\n            </button>\n\n            {isCommentsVisible && (\n              <ul className=\"PostDetails__list\">\n                {comments.map(({ id, email, body }) => (\n                  <li\n                    className=\"PostDetails__list-item\"\n                    key={id}\n                  >\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => deleteComment(id)}\n                    >\n                      X\n                    </button>\n                    <span>{`${email}:`}</span>\n                    <p>{body}</p>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </section>\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm\n                selectedPost={selectedPost}\n                setComments={setComments}\n              />\n            </div>\n          </section>\n        </>\n      )}\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPost: PropTypes.number.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getPosts } from './api/posts';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [userId, setUserId] = useState(0);\n  const [postId, setPostId] = useState(0);\n\n  useEffect(() => {\n    getPosts(+userId)\n      .then(setPosts);\n  }, [userId]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={({ target }) => setUserId(target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPost={postId}\n            selectPost={setPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails\n            selectedPost={postId}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}